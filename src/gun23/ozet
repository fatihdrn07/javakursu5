int[]
index var  : dizi[i]
fori(sıra garanti çünkü indexe göre gidiyor)
foreach(sıra garanti değil)

ArrayList
index var : (get(i))
fori(sıra garanti, çünkü indexe göre gidiyor)
foreach(sıra garanti değil)

SET lerde
index YOK
fori  YOK
foreach (sıra garanti değil)
garanti istiyorsan ITERATOR yöntemi
bugün Set leri
yarın Map leri

perşembe otobanda yeni şerite geçiyoruz
Bu şerit TASARIM şeridi.
Burada kendi özel değişkenlerimizi kendimiz
tanımlayacağız
öğrenci
adı     -> öğrenci.adı
soyadı  -> öğrenci.soyadı
numarası -> öğrenci.numarası
dersleri -> öğrenci.dersleri
 Yazılımcıların Şeriti
6 haftalık şerit
-> Testing toollara -> 12 hafta -> Testersınız
SDET

 public static void main(String[] args) {
        HashSet<Integer> setA=new HashSet<>();
        setA.add(1);
        setA.add(2);
        setA.add(3);
        setA.add(4);
        setA.add(5);

        HashSet<Integer> setB=new HashSet<>();
        setB.add(4);
        setB.add(5);
        setB.add(6);
        setB.add(7);

        System.out.println("setA = " + setA);
        System.out.println("setB = " + setB);

        /*** birleştirme  ***/
        HashSet<Integer> birlesikHali=new HashSet<>();
        birlesikHali.addAll(setA);
        birlesikHali.addAll(setB);
        System.out.println("birlesikHali = " + birlesikHali);

        /*** farkı  ***/
        HashSet<Integer> farki =new HashSet<>();
        farki.addAll(setA);
        farki.removeAll(setB); // A dan B yi çıkardı
        System.out.println("farki = " + farki);

        /*** ortak elemanlar, kesişim ***/
        HashSet<Integer> ortakElemanlar =new HashSet<>();
        ortakElemanlar.addAll(setA);
        ortakElemanlar.retainAll(setB);
        System.out.println("ortakElemanlar = " + ortakElemanlar);

    }